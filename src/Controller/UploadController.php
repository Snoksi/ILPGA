<?php
// src/Controller/UploadController.php
namespace App\Controller;

use App\Entity\Stimulus;
use App\Form\Test\StimulusType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use App\Entity\Excel;
use App\Form\Test\ExcelType;

class UploadController extends Controller
{
    /**
     * @Route("/new", name="app_product_new")
     */
    public function new(Request $request)
    {
        $excel = new Excel();
        $form = $this->createForm(ExcelType::class, $excel);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // $file stores the uploaded PDF file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $excel->getExcel();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('excel_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $excel->setExcel($fileName);

            // ... persist the $product variable or any other work

            return $this->redirectToRoute('home');
        }

        return $this->render('upload/excel.html.twig', array(
            'form' => $form->createView(),
        ));
    }
    /**
     * @Route("/news", name="app_product_news")
     */
    public function news(Request $request)
    {
        $stimulus = new Stimulus();
        $form = $this->createForm(StimulusType::class, $stimulus);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // $file stores the uploaded PDF file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $stimulus->getStimulus();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('excel_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $stimulus->setStimulus($fileName);

            // ... persist the $product variable or any other work

            return $this->redirectToRoute('home');
        }

        return $this->render('upload/stimulus.html.twig', array(
            'form' => $form->createView(),
        ));
    }
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}